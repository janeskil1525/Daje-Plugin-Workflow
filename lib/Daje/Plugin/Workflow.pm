package Daje::Plugin::Workflow;
use Mojo::Base 'Mojolicious::Plugin', -signatures;
use v5.40;

# NAME
# ====
#
# Daje::Plugin::workflow - It's new $module
#
# SYNOPSIS
# ========
#
#     use Daje::Plugin::workflow;
#
# DESCRIPTION
# ===========
#
# Daje::Plugin::workflow is ...
#
# LICENSE
# =======
#
# Copyright (C) janeskil1525.
#
# This library is free software; you can redistribute it and/or modify
# it under the same terms as Perl itself.
#
# AUTHOR
# ======
#
# janeskil1525 E<lt>janeskil1525@gmail.comE<gt>
#

our $VERSION = "0.02";

use Daje::Workflow::Database;
use Daje::Workflow::Loader;
use Daje::Workflow;

sub register ($self, $app, $config) {

    my $test = 1;
    push @{$app->routes->namespaces}, 'Daje::Controller';
    try {
        Daje::Workflow::Database->new(
            pg         => $app->pg,
            migrations => $app->config('migrations'),
        )->migrate();
    } catch ($e) {
        $app->log->error($e);
    };

    my $loader;
    try {
        $loader = Daje::Workflow::Loader->new(
            path => '/home/jan/Project/Daje-Workflow-Workflows/Workflows',
            type => 'workflow',
        );
    } catch ($e) {
        $app->log->error($e);
    };


    my $workflow;
    try {
        $workflow = Daje::Workflow->new(
            pg     => $app->pg,
            loader => $loader->loader,
        );
    } catch ($e) {
        $app->log->error($e);
    };


    $app->helper(workflow => sub {$workflow});

    $app->log->debug("Daje::Plugin::Workflow registered");
}





1;

__END__



#################### pod generated by Pod::Autopod - keep this line to make pod updates possible ####################

=head1 NAME


Daje::Plugin::workflow - It's new $module



=head1 SYNOPSIS


    use Daje::Plugin::workflow;



=head1 DESCRIPTION


Daje::Plugin::workflow is ...



=head1 REQUIRES

L<experimental> 

L<v5.40> 


=head1 METHODS


=head1 AUTHOR


janeskil1525 E<lt>janeskil1525@gmail.comE<gt>



=head1 LICENSE


Copyright (C) janeskil1525.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.



=cut

